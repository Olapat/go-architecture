// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/reset_password/request": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "request reset password [mobile, web]",
                "parameters": [
                    {
                        "description": "BodyRequestResetPassword",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authEntity.BodyRequestResetPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.Response200"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Response400"
                        }
                    }
                }
            }
        },
        "/auth/reset_password/save": {
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "reset password [mobile, web]",
                "parameters": [
                    {
                        "description": "BodyResetPassword",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authEntity.BodyResetPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.Response200"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/authEntity.ResponseSignIn"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Response400"
                        }
                    }
                }
            }
        },
        "/auth/reset_password/verify/{token}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify setup password [mobile, web]",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.Response200"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Response400"
                        }
                    }
                }
            }
        },
        "/auth/setup_password/save": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "setup password [mobile, web]",
                "parameters": [
                    {
                        "description": "BodySetupPassword",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authEntity.BodySetupPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.Response200"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/authEntity.ResponseSignIn"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Response400"
                        }
                    }
                }
            }
        },
        "/auth/sign_in": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "sign in [mobile, web]",
                "parameters": [
                    {
                        "description": "BodySignIn",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authEntity.BodySignIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.Response200"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/authEntity.ResponseSignIn"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Response400"
                        }
                    }
                }
            }
        },
        "/master/district/{province_id}": {
            "get": {
                "description": "Master District",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "District",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Province Id",
                        "name": "province_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.Response200"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/districtEntity.District"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response500"
                        }
                    }
                }
            }
        },
        "/master/province": {
            "get": {
                "description": "Master Province",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Province",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.Response200"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/provinceEntity.Province"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response500"
                        }
                    }
                }
            }
        },
        "/master/sub_district/{province_id}/{district_id}": {
            "get": {
                "description": "Master SubDistrict",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "SubDistrict",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Province Id",
                        "name": "province_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "District Id",
                        "name": "district_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.Response200"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/subDistrictEntity.SubDistrict"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Response500"
                        }
                    }
                }
            }
        }
        
    },
    "definitions": {
        "authEntity.BodyRequestResetPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "authEntity.BodyResetPassword": {
            "type": "object",
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "login_with": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "authEntity.BodySetupPassword": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "login_with": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "authEntity.BodySignIn": {
            "type": "object",
            "required": [
                "password",
                "role",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "0"
                },
                "password": {
                    "type": "string",
                    "x-order": "1"
                },
                "loginWith": {
                    "type": "string",
                    "x-order": "2"
                },
                "fcmToken": {
                    "type": "string",
                    "x-order": "3"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "HR_MANAGER",
                        "EMPLOYEE"
                    ]
                }
            }
        },
        "authEntity.ResponseSignIn": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string",
                    "example": "623d38efc41b8a687bedfe21"
                },
                "company_status": {
                    "description": "Menu          []roleMenuEntity.Menu ` + "`" + `json:\"menu\" bson:\"menu\"` + "`" + `",
                    "type": "string"
                },
                "full_name": {
                    "type": "string",
                    "example": "full name"
                },
                "id": {
                    "type": "string",
                    "example": "623d38efc41b8a687bedfe25"
                },
                "role": {
                    "type": "string",
                    "example": "EMPLOYEE"
                },
                "status": {
                    "type": "string",
                    "example": "TO_SET_PASSWORD"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2NDg4MDM5MzMsImlkIjoiNjIzZDM4ZWZjNDliOGE2ODdiZWRmZTI1Iiwicm9sZV9pZCI6IjEiLCJ1c2VybmFtZSI6ImFkbWluNCJ9.ZSHeB6BsWBwelIz5uT_4zMFODv8A8nf19pSIavAU6iI"
                },
                "username": {
                    "type": "string",
                    "example": "Username"
                }
            }
        },
        "districtEntity.District": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "geo_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "name_th": {
                    "type": "string"
                },
                "province_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "entity.Response200": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Success"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "entity.Response400": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "entity.Response500": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string",
                    "example": "Internal Server Error"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "provinceEntity.Province": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "geo_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "name_th": {
                    "type": "string"
                }
            }
        },
        "subDistrictEntity.SubDistrict": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "amphure_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "name_th": {
                    "type": "string"
                },
                "post_code": {
                    "type": "string"
                },
                "province_id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Go-filber API",
	Description:      "This is a spec api Go-filber project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
